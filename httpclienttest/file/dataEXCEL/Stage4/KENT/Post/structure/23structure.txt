Course structure


 This conversion programme prepares graduates from any discipline for a career in computing, or a career involving the application of computing within their original professional field. Our students come from a wide variety of backgrounds including natural sciences, engineering, arts, humanities and social sciences. No prior knowledge of computer science is required.

All taught Master&rsquo;s programmes at Canterbury are available with an optional industrial placement or may be combined with a Pre-Master&rsquo;s course to form an International Master&rsquo;s programme.




 Modules


 The following modules are indicative of those offered on this programme. This list is based on the current curriculum and may change year to year in response to new curriculum developments and innovation.   Most programmes will require you to study a combination of compulsory and optional modules. You may also have the option to take modules from other programmes so that you may customise your programme and explore other subject areas that interest you.


 

      
   CO880 - Project and Dissertation


   
    Students choose their project near the beginning of term 2 in coordination with the Project Research module (CO885). Projects are normally selected from a list of suggestions proposed by the department, a number of which may involve industrial collaboration.  Alternatively, students may propose a project of their own if a suitable member of academic staff is available to act as the supervisor.  In all cases the particular project must be appropriate for, and relevant to, the student's programme of study.The project consists of an extended period during which students work on a specific piece of project work and a report on this work in the form of a dissertation.  Project work is normally undertaken individually.The project examines the student's ability to research the literature, to understand and expand on a specific technical problem commensurate with their programme of study and relate it to other work, to carry out investigations and practical work generally including programming and describe results and draw conclusions from them and to write a coherent and well organised dissertation.


    Credits: 60 credits
     (30 ECTS credits).



    Read
      more 


   

  

   
   CO883 - Systems Architecture


   
    A computer system's architecture describes the underlying combination of software and hardware that needs to be provided before the system can be used; an understanding of the basic principles of computer architecture is essential if computer systems are to be used effectively.Fundamental ideas of computer hardware:   Boolean algebra.   Binary and hexadecimal numbers, two's complement, and binary arithmetic.   Data representation: bits, bytes, and words; character codes.   The von Neumann architecture: processor, memory, and peripherals; registers, RAM and ROM, data and address buses; the fetch-execute cycle.   Processor microarchitecture: CISC v RISC, superscalar, pipelined, out-of-order execution, branch prediction, multiprocessing.   Cache architectures.   Buses.  Practical introduction to the use of a UNIX-like operating system:   The structure of the filing system.   Syntax of operating system commands: options, files, etc.   Input/output, redirection and pipes.   Operating system tools and their use in building pipelines.  The principles and mechanisms of operating systems:   Function and historical development of operating systems.   Processes: states, communication, mutual exclusion, synchronisation, semaphores, monitors, avoidance of deadlock, high-level scheduling, process security.   The kernel: hardware requirements, interrupt handlers, low-level scheduling.   Memory management: swapping, virtual memory, paging.   Input/output; blocking and non-blocking transfers; privileged I/O processes.   File systems: functions, storage media, layout and organisation of files, file security.   The loading process; libraries; relocation.   Resource allocation; resource management.   Local and remote file access. 


    Credits: 15 credits
     (7.5 ECTS credits).



    Read
      more 


   

  

   
   CO884 - Logic and Logic Programming


   
    This module contains four main components, several of which are at the forefront of the academic discipline and are informed by research:1) Propositional and predicate logic, and resolution.       the formal languages of propositional logic and predicate logic     the role of resolution in theorem proving and logic programming2) Prolog programming       a thorough introduction to the Prolog programming language and the concept of declarative coding3) Search Techniques       generic search algorithms that are widely applied in solving computationally hard problems4) Constraint Logic Programming       how constraint satisfaction is useful in search and how this emerging paradigm fits with logic programming 


    Credits: 15 credits
     (7.5 ECTS credits).



    Read
      more 


   

  

   
   CO885 - Project Research


   
    The crowning piece of most Masters degrees is the Project and Dissertation in which you apply a wide range of skills learned in the taught modules to an interesting research problem or practical application of your choice. The Project Research module provides useful transferable skills for doing the project, and supports you in some preparatory tasks such as literature study and project planning.Training in research methods is provided through a series of workshops, covering the following topics: Introduction to research Project selection Topic analysis Information gathering Simulation, experimentation and data analysis Writing about research Presenting research Intellectual property The publication process The review processThe module culminates in a mini-conference where students present their research.


    Credits: 15 credits
     (7.5 ECTS credits).



    Read
      more 


   

  

   
   CO886 - Software Engineering


   
    Creating a quality software product requires much more than skilful programming. First of all, the requirements for the product must be determined. Unfortunately, customers' perceptions of their requirements are usually vague and incomplete, and often inconsistent too, so these perceived requirements must be carefully analysed and amplified. Before software is shipped, it is important that cost-effective measures are applied to ensure, as far as possible, that it is free from errors, especially major errors: this involves procedures such as source code analysis and inspection as well as thorough testing. But some bugs will inevitably get through to the delivered product, and it is important that users can easily submit informative bug reports that allow the problem to be quickly localised and rectified.All of the issues just described have an impact on the design of the software: it must be designed, for example, to ensure that it is amenable to thorough and systematic testing, and that if internal errors do occur, they are detected quickly before the program's data files have been irrecoverably damaged. Also, design must ensure that the software can easily be adapted and extended as the customer's requirements evolve over time.This module takes a wider view of the software development process, with an emphasis on techniques and procedures for ensuring high product quality. A key topic is the use of the Unified Modelling Language (UML) for problem analysis and software design. Towards the end of the module students have an opportunity to put theory into practice by undertaking a group project, with another group as their customer. Syllabus-  Quality standards, including ISO9001 and CMM. -  Alternative models of a software project's lifecycle, and the role of the object-oriented development paradigm in modern lifecycle concepts. -  Object-oriented modelling notations, in particular UML, and the use of these notations throughout the project lifecycle. -  Mapping of designs expressed in UML into Java code. -  Techniques for verifying models, and the conformance of one model to another. -  Approaches to software testing and inspection. -  Approaches to software configuration management


    Credits: 15 credits
     (7.5 ECTS credits).



    Read
      more 


   

  

   
   CO887 - Web-Based Information Systems Development


   
    Web-based information systems form the heart of e-commerce. They are also increasingly the way businesses handle all their information needs. Building such systems requires an understanding of up-to-date tools and technologies such as XML, UML, Java and databases; it also calls for an understanding of how to design systems that genuinely meet user and business needs.This module starts by examining the business context of web-based information systems. It introduces design methodologies and techniques, using UML in recording requirements. Systems implementation involves database management systems and these are studied in some depth. By the end of the module, each student will have developed a complete information system which uses XML and Java to link dynamic web pages to a database back-end.Information Systems:   Role of information systems in e-business.   IS development methodologies   Systems thinking and its relationship to IS development   Information analysis using UML   Systems design  Database Systems:   Relational and Object-Relational Database Management Systems   Database design and implementation   Database query languages   Transactions   Security and reliability  Web-related technologies:   Mark-up languages (XML, HTML, etc)   Web interfaces to databases (JDBC, servlets, etc) 


    Credits: 15 credits
     (7.5 ECTS credits).



    Read
      more 


   

  

   
   CO889 - C++ Programming


   
    This module builds on CO871 Advanced Java for Programmers and extends your knowledge to cover the language C++ which is widely used by professional programmers.SyllabusIntroduction to the C and C++ languages, relating to their previous knowledge of Java, including interfaces, classes, abstract classes, inheritance, interfaces, overloading and templates; Review of command-line based development, including compiling, debugging and makefiles; C++ specific items, including multiple inheritance, namespaces, friend classes, virtual methods, pointers, casting operators and explicit memory management; Low-level programming in C++, covering considerations for inline assembly, linkage with other languages and mobile platform development; High-level programming in C++, covering large scale applications, efficient programming (e.g. games) and design patterns; Coverage of standard libraries, where to look for these, and how to use them; 


    Credits: 15 credits
     (7.5 ECTS credits).



    Read
      more 


   

  

   
   CO874 - Networks and Network Security


   
    A synopsis of the curriculumIntroduction, including a review of network techniques, switching and multiple access.High speed local area networks.Network protocols, including data link, network, transport and application layers.Real time data transmission and quality of service.Naming and addressing, including material on the domain name system, dynamic IP address allocation and address translation systems.Routing in data networksNetwork services.Firewalls and layer 3 network security.Recent developments.  Topic will change from year to year and will be addressed prinicipally by research seminars and student centred research.


    Credits: 15 credits
     (7.5 ECTS credits).



    Read
      more 


   

  

   
   CO882 - Advanced Object-Oriented Programming


   
    Building upon CO881 Introduction to Object-Oriented Programming, this module covers the design and implementation of high-quality software using OO techniques. Systems are modelled as configurations of objects communicating with one another. Techniques (e.g. inheritance) are introduced which allow objects to play different roles within a system. These two concepts are key to the support for adaptation and reuse that OOP provides. Much emphasis will be placed on gaining a deep understanding of these concepts and applying them in practice by developing programs in Java. The remainder of the module will explore software component frameworks, specifically those that come packaged with Java, placing most emphasis on the frameworks to support the structuring and manipulation of data (data structures and algorithms).


    Credits: 15 credits
     (7.5 ECTS credits).



    Read
      more 


   

  

   
   CO836 - Cognitive Neural Networks


   
      Introduction to cognitive neural networks.Neural networks will be placed into a historical perspective related to symbolic approaches and in the context of the artificial intelligence hypothesis. Students will familiarise themselves with the Leabra environment.  The individual neuron.The idea of the components of a neuron as a 'detector' will be developed. Neural networks will be explained in terms of the biology of the brain at a cellular electro-transmission level. The neurobiology will be abstracted into an initial neural network framework, i.e. a set of mathematical equations. Single neuron simulations.  Networks of Neurons.A general framework will be provided for neural network architectures both at an abstract level and in terms of networks in the cortex. Unidirectional (feedforward) and bi-directional (recurrent) interactions will be explained together with inhibitory mechanisms.  Model Learning.A simple Hebbian model of learning will be outlined, pertaining to neurobiology and neural networks. Other models of unsupervised learning will be introduced.  Task Learning.Error-driven task learning will be outlined; the delta rule and back propagation will be presented. A discussion of the biological implausibility of back propagation networks will follow. Motivated by this implausibility, the generalised recirculation algorithm will be introduced and its mathematical formulation and properties discussed. 


    Credits: 15 credits
     (7.5 ECTS credits).



    Read
      more 


   

  

 
  
  Show more...

  
  
       
     CO838      - Internet of Things and Mobile Devices


     
      The module will cover a mixture of theoretical and practical topics in the area of mobile devices and the Internet of Things (IoT), that is, the use of Internet technologies to access and interact with objects in the physical world. This will include coverage of the range of sensor and actuator devices available, ways in which they communicate and compute, methods for getting information to and from IoT-enabled devices, ways of visualising and processing data gained from the IoT, and associated privacy and security issues. A practical component will consist of building the hardware and software for a sensor network and a system to visualise data from that network.  Application development for mobile devices such as smartphones will also be introduced using a popular mobile platform.


      Credits: 15 credits
       (7.5 ECTS credits).


      Read
        more 


     

    

       
     CO841      - Computing Law, Contracts and Professional Responsibility


     
      Synopsis of curriculum. Professional issues and professional organisations. Data privacy legislation, and other UK laws relating to the professional use of computer systems.Criminal law relating to networked computer use, including new Anti-Terrorism legislation;and their application. Intellectual Property Rights, including Copyright, Patent and explicit IPR Legislation. Contract Law, with a specific focus on vendor-client contracts, and related issues. Health & Safety issues. Computer-based Projects, including the vendor-client relationship and professional responsibilities, and examples of real-life contracts that have exposed vendor or supplier to unacceptable commercial risks.However, as this is a rapidly evolving field, specific topics will change from year to year, as both computer law and professional responsibilities continue to evolve.


      Credits: 15 credits
       (7.5 ECTS credits).


      Read
        more 


     

    

       
     CO528      - Introduction to Intelligent Systems


     
      This module covers the basic principles of machine learning and the kinds of problems that can be solved by such techniques. You learn about the philosophy of AI, how knowledge is represented and algorithms to search state spaces. The module also provides an introduction to both machine learning and biologically inspired computation.


      Credits: 15 credits
       (7.5 ECTS credits).


      Read
        more 


     

    

       
     CO641      - Computer Graphics and Animation


     
      Computer graphics and animation are important for a variety of technical and artistic applications including web design, HCI and GUI development, games and simulations, digital photography and cinema, medical and scientific visualization, etc.This module introduces the subject from the perspective of computing. You will learn about technologies and techniques for modelling, manipulating, capturing, displaying and storing 2D and 3D scenes, digital images, animations and video. You will also gain practical experience of 3D modelling and animation tools and of implementing digital imaging techniques in Java.Digital Imaging and Video:Human visionColour modelsImages, video and 3DCapture and displayEnhancement and conversionFormats and compression (e.g. GIF, JPEG, MPEG)Computer Graphics:Graphics pipeline3D object and scene modelling with polygon meshesTransformationsProjection, clipping and visible surface determinationIllumination and shadingRay tracing and photorealismComputer Animation:Key-frame animationWarping and morphingArticulated figuresKinematics, dynamics and collision detectionParticle systems and flockingComputer-generated human characters and video-realism


      Credits: 15 credits
       (7.5 ECTS credits).


      Read
        more 


     

    

       
     CO645      - IT Consultancy Practice 2


     
      Students taking this module will undertake one or (typically) more assignments for the Kent IT Clinic (KITC). Each assignment will be of one of three types: Work on one of KITCs contracts with an external client. To the extent that client-funded work allows, every student will be given at least one assignment of this type. Wherever practical, a student will be encouraged to participate in the negotiation and pricing of contracts, under the ultimate supervision of KITC management. For each assignment, the student may work on the assignment individually or as part of a group, as directed by KITC. A contribution to the infrastructure of KITC itself.  A contribution to the infrastructure of KITC itself. These assignments work in a similar way to external assignments, but with KITC as the client.Formulating a costed proposal for the future development of KITC, and presenting reasoned argument in support of the proposal to KITC management, as a candidate for inclusion in KITCs strategic plan for the following academic year.


      Credits: 15 credits
       (7.5 ECTS credits).


      Read
        more 


     

    

       
     CO832      - Data Mining and Knowledge Discovery


     
      This module explores a range of different data mining and knowledge discovery techniques and algorithms. You learn about the strengths and weaknesses of different techniques and how to choose the most appropriate for any particular task. You use a state-of-the-art data-mining tool, and learn to evaluate the quality of discovered knowledge. There is also the opportunity to extend data mining concepts and principles to text and web mining.


      Credits: 15 credits
       (7.5 ECTS credits).


      Read
        more 


     

    

       
     CO871      - Advanced Java for Programmers


     
      This module provides for well-qualified computer science students entering the MSc programme from a range of backgrounds. These students will have good programming skills but will not necessarily have used Java or another object-oriented language extensively. This module seeks to ensure that students have the Java and object-oriented design skills necessary for the rest of their programme.


      Credits: 15 credits
       (7.5 ECTS credits).


      Read
        more 


     

    

       
     CO881      - Object-Oriented Programming


     
      This module provides an introduction to object-oriented programming using the popular Java language. It is designed for beginners who have not studied computer programming before. By the end students will be able to develop simple programmes using Java. (Note that students with substantial prior experience of programming take module CO871 Advanced Java for Programmers[1] instead.) Software development tools (editors, compilers, etc)The wider software development processProgramming paradigms and languagesThe concept of algorithmsSequences of statements and order of executionClasses, objects and packages (what they are and how to use them)Primitive data types, variables and expressionsMethods and parametersControl structures (selection, repetition)Input and outputCoding style and inline documentationOnline documentation


      Credits: 15 credits
       (7.5 ECTS credits).


      Read
        more 


     

    

       
     CO912      - Industrial Placement (12 months)


     
      


      Credits: 120 credits
       (60 ECTS credits).


      Read
        more 


     

    

       
     CO651      - Research and Study Skills


     
      


      Credits: 15 credits
       (7.5 ECTS credits).


      Read
        more 


     

    

       
     CO699      - Computing Project


     
      This module is to provide the opportunity for students to undertake a substantial individual computing project on a topic of their choice. Frequently the project is chosen from the discipline of the student's previous degree programme, thus enabling students to appreciate the role of computing in diverse application domains. The project may be self-proposed or may be selected from a list of project proposals. Typically, a project will involve the specification, design, implementation, documentation and demonstration of a technical artefact. The project is supervised by a member of the academic staff, who holds weekly meetings with the student, during which s/he will give general advice and will assess the progress of the student. Attendance at these meetings is compulsory and is monitored. The supervisors will direct students towards background and research-related literature relevant to the project. The meetings also enable students to respond to suggestions from supervisors for innovative and challenging extensions to their chosen project. Towards the end of the project, the student prepares a report describing the outcome of the project, which may be supplemented by appendices that support the achievements claimed.


      Credits: 30 credits
       (15 ECTS credits).


      Read
        more 


     

    

     

 
 






   Assessment

  
   Assessment is through a mixture of written examinations and coursework, the relative weights of which vary according to the nature of the module. The final project is assessed by a dissertation, except for the MSc in IT Consultancy for which the practical consultancy work is assessed through a series of reports covering each of the projects undertaken.
  

 
   Programme aims

  
   This programme aims to:

 enhance the career prospects of graduates seeking employment in the computing/IT sector
 prepare you for research and/or professional practice at the forefront of the discipline
 develop an integrated and critically aware understanding of one or more areas of computing/IT and their applications (according to your degree title)
 develop a variety of advanced intellectual and transferable skills
 equip you with the lifelong learning skills necessary to keep abreast of future developments in the field.

  

 
   Learning outcomes

  
   Knowledge and understanding

   You gain knowledge and understanding of:

 how to engineer software systems that satisfy the needs of customers, using a state-of-the art methodology and an industrially-relevant programming language
 a broad variety of advanced topics relating to computing/IT (the specific topics will depend on the optional modules you chose and may vary from year to year in response to developments in the field, staff changes etc)
 the specification, design and implementation of software systems for a variety of platforms and across a range of application domains
 the theoretical foundations of computer science
 the architecture of computer systems including hardware components and operating systems in terms of their functionality, performance and interactions
 the specification, design and implementation of information systems using the latest database and web technologies
 professional, legal, social, cultural and ethical issues related to your chosen field of computing.

  

 
   
   Intellectual skills

   You develop intellectual skills in:

 the ability to identify, analyse and formulate criteria and specifications appropriate to a given problem
 the ability to model problems and their solutions with an awareness of any tradeoffs involved
 the ability to evaluate systems, processes or methodologies in terms of general quality attributes and possible tradeoffs
 the ability to deal with complex issues both systematically and creatively
 the ability to work with self-direction and originality in tackling and solving problems
 the ability to make sound judgements in the absence of complete data
 the ability to review a research paper or technical report critically and to present your findings to a group of peers
 the ability to plan and execute a substantial research or development-based project and to report the work in the form of a dissertation.

  

 
   
   Subject-specific skills

   You gain subject-specific skills in:

 the ability to specify, design, implement and test computer-based systems
 the ability to deploy effectively the tools used for the construction and documentation of software
 the ability to undertake practical work that explores techniques covered in the programme and to analyse and comment on the findings.

  

 
   
   Transferable skills

   You gain the following transferable skills:

 the ability to plan, work and study independently and to use relevant resources in a manner that reflects good practice
 the ability to make effective use of general IT facilities, including information retrieval skills &bull; time management and organisational skills, including the ability to manage your own learning and development
 an appreciation of the importance of continued professional development as part of lifelong learning
 the ability to work effectively as a member of a team
 the ability to communicate technical issues clearly to specialist and nonspecialist audiences
 the ability to present ideas, arguments and results in the form of a well-structured written report
 the ability to act autonomously in planning and implementing tasks at professional or equivalent level. 